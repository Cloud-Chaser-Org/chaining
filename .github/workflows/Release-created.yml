name: Release pipeline

on:
  release:
    types: [created]
    branches-ignore:
      - main
  workflow_dispatch:


env:
  custom: 'env for all jobs'
  service: 'chaining-dev-service'
  cluster: 'chaining-dev-cluster'
  container: 'chaining-dev-container'
  ecr-repo: 'chaining-dev-ecr'
  aws-region: 'us-east-1'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    #if: github.event.pull_request.merged == true
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
   
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.aws-region }} 
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ env.ecr-repo }}
        IMAGE_TAG: ${{ github.ref_name}}
      run: |
        echo "Version=$IMAGE_TAG  Branch=${{ github.event.release.target_commitish }}"
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"